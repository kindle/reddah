@using Reddah.Web.UI.Models
@using System.Globalization   
@using Reddah.Web.UI.Utility
@{
    var locale = CultureInfo.CurrentUICulture.Name;
}
<link href="/Content/Comment.css" rel="stylesheet" />
<link href="/Content/Post.css" rel="stylesheet" />
<style>
    .flex-article {
        display: -webkit-flex;
        -webkit-justify-content: space-between;

        display: flex;
        justify-content: space-between;
    }
    .flex-article-left {
        display: -webkit-flex;
        -webkit-flex-direction: column;
        -webkit-flex: 0 1 auto;
        display: flex;
        flex-direction: column;
        margin: 0 20px 0 0;
    }
    .flex-article-left img {
        max-width:100%;
        height:auto !important;
    }
    .flex-article-left video {
        max-width: 100%;
        height: auto !important;
    }
    .flex-article-right {
        display: -webkit-flex;
        -webkit-flex-direction: column;
        -webkit-flex: 0 1 300px;
        display: flex;
        flex-direction: column;
        flex: 300px;
    }
    .flex-vote {
        display: -webkit-flex;
        -webkit-justify-content: center;
        -webkit-align-items: center;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 30px;
    }
        .flex-vote > u {
            background-image: url("/Content/Images/like-dislike.png"), none;
            background-position: 0 0;
            background-repeat: no-repeat;
            background-size: initial;
            cursor: pointer;
            height: 40px;
            width: 40px;
            text-decoration: none;
        }
        .flex-vote > a {
            background-image: url("/Content/Images/like-dislike.png"), none;
            background-position: -40px 0;
            background-repeat: no-repeat;
            background-size: initial;
            cursor: pointer;
            height: 40px;
            width: 40px;
        }
        .flex-vote > i{
            margin: 0 15px 0 5px;
        }
        
</style>
<div class="flex-article">
    <div class="flex-article-left" id="articleContent">
        <div>
            <h1>@Html.Raw(Helpers.HtmlDecode(Model.Article.Title))</h1>
            <div class="listInfo">Submitted @Model.Article.CreatedOn ago by <a href="/@locale/user/@Model.Article.UserName">@Model.Article.UserName</a> to <a href="/@locale/r/@Helpers.HtmlDecode(Model.Article.GroupName)"><u>@Helpers.HtmlDecode(Model.Article.GroupName)</u></a></div>
            @if (Model.Article.LastUpdateOn != null)
            {<div class="listInfo">Last updated on @Model.Article.LastUpdateOn</div>}
            <div class="listInfo">
                @if (User.Identity.Name.Equals(Model.Article.UserName) || Helpers.Acl(User.Identity.Name, PrivilegeList.EditPost))
                {<u><a href="/@locale/edit/@Model.Article.Id">[Edit]</a></u> }
                @if (User.Identity.Name.Equals(Model.Article.UserName) || Helpers.Acl(User.Identity.Name, PrivilegeList.DeletePost))
                {<u><a href="/@locale/delete/@Model.Article.Id">[Delete]</a></u>}
            </div>
            <div class="listInfo" style="display:none;">share save hide report</div>
        </div>
        <div>@Html.Raw(Helpers.HtmlDecode(Model.Article.Content))</div>
        <section class="flex-vote">
            @if (Request.IsAuthenticated)
            {
                <u id="voteButton" ng-click="vote(@Model.Article.Id, 'up', @(Model.Article.Up-Model.Article.Down),'articleContent')"></u>
                <i id="voteInfo"><u style="cursor: pointer;">I like the post!</u></i>
                <i id="voteThanks" style="display:none;"><u>Thank you for the feedback! Your vote here will to help them become popular.</u></i>
                <span style="display:none;" itemprop="upvoteCount" id="vote-count-post-@Model.Article.Id">@(Model.Article.Up - Model.Article.Down)</span>
                <!--<a ng-click="vote(@Model.Article.Id, 'down', @(Model.Article.Up-Model.Article.Down),'articleContent')"></a>
        <i>I don't like it!</i>-->
            }
            else
            {
                <u ng-click="showPanel()" id="votelogo"></u>
                <i ng-click="showPanel()"><u style="cursor: pointer;">I like the post!</u></i>
                <!--<a ng-click="showPanel()">I don't like the post!</a>-->
            }
        </section>
        <div class="postModuleLiner"></div>
        <div style="margin:20px;" ng-controller="commentCtrl">
            <input data-ng-model="articleId" type="hidden" data-ng-init="articleId='@Model.Article.Id'" />
            All @Model.Article.Count Comments
            @Html.Partial("~/Views/Articles/NewComment.cshtml", new CommentModel() { ParentId = -1 })
            @Html.Partial("Comment", Model.Comments as SeededComments)
        </div>
    </div>
    <aside class="flex-article-right">
        @*Html.Partial("~/Views/Shared/Controls/LoginRegister/JsonLogin.cshtml", new Reddah.Web.UI.Models.LoginModel())*@
        <div class="subreddahbox">
            <h5>Welcome to <a href="/@locale/r/@Model.GroupName">/r/@Model.GroupName</a></h5>
            <h3>Rules</h3>
            <ol>
                <li>You also agree to follow the Reddah Content Policy. These guidelines are intended to keep people safe, protect kids, keep reddah running, and to encourage personal responsibility for what you do on reddah.</li>
                <li>You may not post any graphics, text, photographs, images, video, audio or other material that we deem to be junk or spam. Cluttering reddah with this sort of content reduces the quality of the reddah experience for others.</li>
                <li>You agree not to interrupt the serving of reddah, introduce malicious code onto reddah, make it difficult for anyone else to use reddah due to your actions, attempt to manipulate votes or reddah’s systems, or assist anyone in misusing reddah in any way. It takes a lot of work to maintain reddah. Be cool.</li>
            </ol>
            <br />
        </div>
        @{
            int j = 0;
            foreach (var rightBoxModule in Model.RightBoxModules)
            {
                if (!String.IsNullOrEmpty(rightBoxModule.Title) && !String.IsNullOrEmpty(rightBoxModule.ArticleUrl))
                {
                    if (j == 3)
                    {
                        break;
                    }
                    <div class="HomePageRightBoxModule">
                        <table>
                            <tr>
                                <td>
                                    <a href="/@locale/@rightBoxModule.ArticleUrl"><img alt="@rightBoxModule.ImageUrl" src="@rightBoxModule.ImageUrl" /></a>
                                </td>
                                <td class="rightBoxModule">
                                    <h2><a href="/@locale/@rightBoxModule.ArticleUrl">@rightBoxModule.Title</a></h2>
                                    <div>@rightBoxModule.Description</div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    j++;
                }
            }
        }
    </aside>
</div>
