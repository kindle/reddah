@using Reddah.Web.UI.Models
@using System.Globalization
@using Reddah.Web.UI.Resources
@using Reddah.Web.UI.Utility
@{
    var locale = CultureInfo.CurrentUICulture.Name;
    var language = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
    ViewBag.ReddahPageTitle = Helpers.HtmlDecode(Model.Article.Title);
}
<link href="/Content/Comment.css" rel="stylesheet" />
<link href="/Content/Post.css" rel="stylesheet" />
<style>
    .poetry {
        font-size: x-large;
    }

    .flex-article {
        width: 1170px;
        margin: 0 auto;
        display: -webkit-flex;
        -webkit-justify-content: space-between;
        display: flex;
        justify-content: space-between;
    }

    .flex-article-left {
        display: -webkit-flex;
        -webkit-flex-direction: column;
        -webkit-flex: 0 1 auto;
        display: flex;
        flex-direction: column;
        margin: 0 20px 0 0;
        min-width: 900px;
        max-width: 900px;
    }

        .flex-article-left img {
            max-width: 100%;
            height: auto !important;
        }

        .flex-article-left video {
            max-width: 100%;
            height: auto !important;
        }

    .flex-article-right {
        margin-top: 20px;
        display: -webkit-flex;
        -webkit-flex-direction: column;
        -webkit-flex: 0 1 300px;
        display: flex;
        flex-direction: column;
        flex: 300px;
    }

    .flex-vote {
        display: -webkit-flex;
        -webkit-justify-content: center;
        -webkit-align-items: center;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 30px;
    }

        .flex-vote > u {
            background-image: url("/Content/Images/like-dislike.png"), none;
            background-position: 0 0;
            background-repeat: no-repeat;
            background-size: initial;
            cursor: pointer;
            height: 40px;
            width: 40px;
            text-decoration: none;
        }

        .flex-vote > a {
            background-image: url("/Content/Images/like-dislike.png"), none;
            background-position: -40px 0;
            background-repeat: no-repeat;
            background-size: initial;
            cursor: pointer;
            height: 40px;
            width: 40px;
        }

        .flex-vote > i {
            margin: 0 15px 0 5px;
        }

    .groupLoading {
        padding: 30px;
        text-align: center;
    }

    .commentBox {
        padding-top: 20px;
    }
</style>
<div class="flex-article">
    <div class="flex-article-left" id="articleContent">
        <div>
            <h1>@Html.Raw(Helpers.HtmlDecode(Model.Article.Title))
            <div class="fa fa-volume-up" id="readpbtn">
                <audio id="readp" src="///tts.baidu.com/text2audio?lan=@language&ie=UTF-8&text=@Helpers.ToAudioString(Model.Article.Content)&spd=3"></audio>
                <script type="text/javascript">
                    $(function () {
                        let audiobtn = $('#readpbtn');
                        $('#readp').on('ended', function () {
                            audiobtn.toggleClass("fa fa-volume-up", true);
                            audiobtn.toggleClass("fa-pause", false);
                        })
                        
                        var audio = document.getElementById('readp');
                        audio.volume = .3;
                        audiobtn.click(function () {
                            event.stopPropagation();
                            if (audio.paused) { 
                                audiobtn.toggleClass("fa-volume-up", false);
                                audiobtn.toggleClass("fa-pause", true);
                                audio.play(); 
                                return;
                            } else {
                                audiobtn.toggleClass("fa-pause", false);
                                audiobtn.toggleClass("fa-volume-up", true);
                                audio.pause();
                            }
                        });
                    })
                </script>
            </div>
            </h1>
            
            <div class="listInfo">
                @Resources.List_Submit @Model.Article.CreatedOn @Resources.List_By <a href="/@locale/user/@Model.Article.UserName">@Model.Article.UserName</a>
                @foreach (string g in Model.Article.GroupName.Trim().Split(','))
                {
                    <a href="/@locale/r/@Helpers.HtmlDecode(g)"><u>@Helpers.HtmlDecode(g)</u> </a>
                }
            </div>
            @if (Model.Article.LastUpdateOn != null)
            {<div class="listInfo">@Resources.List_LastUpdateOn @Model.Article.LastUpdateOn</div>}
            <div class="listInfo">
                @if (User.Identity.Name.Equals(Model.Article.UserName) || Helpers.Acl(User.Identity.Name, PrivilegeList.EditPost))
                {<u><a href="/@locale/edit/@Model.Article.Id">[Edit]</a></u>}
                @if (User.Identity.Name.Equals(Model.Article.UserName) || Helpers.Acl(User.Identity.Name, PrivilegeList.DeletePost))
                {<u><a href="/@locale/delete/@Model.Article.Id">[Delete]</a></u>}
            </div>
            <div class="listInfo" style="display:none;">share save hide report</div>
        </div>
        <div>@Html.Raw(Helpers.HtmlDecode(Model.Article.Content))</div>
        <div class="postModuleLiner"></div>
        <div class="commentBox">
            @foreach (string g in Model.GroupName.Trim().Split(','))
            {
                <div ng-controller="groupCtrl" data-ng-init="getGroup('@g','@locale')">
                    {{ group.Desc | limitTo : group.Limit }}
                    <span ng-if="group.Desc.length > 150 && group.Desc.length != group.Limit">
                        <a ng-click="showMore()">... @Resources.Browse_ShowMoreText{{(group.Desc.length-150)/group.Desc.length*100 | number:0}}%<i class="fa fa-chevron-down"></i></a>
                    </span>
                    @*<span ng-if="group.Desc.length == group.Limit">
                        <a ng-click="showLess()">@Resources.Browse_ShowLessText<i class="fa fa-chevron-up"></i></a>
                    </span>*@
                </div>
            }
        </div>

        <section class="flex-vote">
            @if (Request.IsAuthenticated)
            {
                <u id="voteButton" ng-click="vote(@Model.Article.Id, 'up', @(Model.Article.Up-Model.Article.Down),'articleContent')"></u>
                <i id="voteInfo"><u style="cursor: pointer;">@Resources.Article_Likeit</u></i>
                <i id="voteThanks" style="display:none;"><u>Thank you for the feedback! Your vote here will to help them become popular.</u></i>
                <span style="display:none;" itemprop="upvoteCount" id="vote-count-post-@Model.Article.Id">@(Model.Article.Up - Model.Article.Down)</span>


                <!--<a ng-click="vote(@Model.Article.Id, 'down', @(Model.Article.Up-Model.Article.Down),'articleContent')"></a>
            <i>I don't like it!</i>-->
            }
            else
            {
                <u ng-click="showPanel()" id="votelogo"></u>
                <i ng-click="showPanel()"><u style="cursor: pointer;">@Resources.Article_Likeit</u></i>
                <!--<a ng-click="showPanel()">I don't like the post!</a>-->
            }
        </section>
        <div class="postModuleLiner"></div>
        <div ng-controller="commentCtrl" class="commentBox">
            <input data-ng-model="articleId" type="hidden" data-ng-init="articleId='@Model.Article.Id'" />
            @Resources.Article_CommentTitle @Model.Article.Count @Resources.Article_CommentCount
            @Html.Partial("~/Views/Articles/NewComment.cshtml", new CommentModel() { ParentId = -1 })
            @Html.Partial("Comment", Model.Comments as SeededComments)
        </div>
    </div>
    <aside class="flex-article-right" id="articleAside">
        @*Html.Partial("~/Views/Shared/Controls/LoginRegister/JsonLogin.cshtml", new Reddah.Web.UI.Models.LoginModel())*@
        <div class="subreddahbox">
            <h5>知识图谱</h5>
            <ol>
                @foreach (string g in Model.GroupName.Trim().Split(','))
                {
                    <li ng-controller="groupCtrl" data-ng-init="getGroup('@g','@locale')">
                        <a href="/@locale/r/@g"><u>@g</u></a>
                    </li>
                }
            </ol>
            <br />
        </div>
        @*{
                int j = 0;
                foreach (var rightBoxModule in Model.RightBoxModules)
                {
                    if (!String.IsNullOrEmpty(rightBoxModule.Title) && !String.IsNullOrEmpty(rightBoxModule.ArticleUrl))
                    {
                        if (j == 3)
                        {
                            break;
                        }
                        <div class="HomePageRightBoxModule">
                            <table>
                                <tr>
                                    <td>
                                        <a href="/@locale/@rightBoxModule.ArticleUrl"><img alt="@rightBoxModule.ImageUrl" src="@rightBoxModule.ImageUrl" /></a>
                                    </td>
                                    <td class="rightBoxModule">
                                        <h2><a href="/@locale/@rightBoxModule.ArticleUrl">@rightBoxModule.Title</a></h2>
                                        <div>@rightBoxModule.Description</div>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        j++;
                    }
                }
            }*@
    </aside>
</div>
<div id="done" style="display:none;"></div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let vs = Array.from($("video"));

        vs.forEach((v) => {

            v.onclick = function () {
                if (v.paused) {
                    v.play();
                } else {
                    v.pause();
                }
            };


            v.onloadeddata = function () {
                var canvas = document.createElement("canvas");
                canvas.width = v.videoWidth;
                canvas.height = v.videoHeight;
                document.getElementById("done").innerHTML = "";
                document.getElementById("done").appendChild(canvas);

                var ctx = canvas.getContext("2d");
                ctx.drawImage(v, 0, 0);

            };

        });

    });

</script>
